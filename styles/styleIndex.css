:root {
    --background: #1F1F1F;
    --buttons: #414141;
    --fontcolor: #ffffff;
}

body, html {
    height: 100%;
    margin: 0;
    background: var(--background);
}

@font-face {
    font-family: 'Inter';
    src: url('fonts/Inter-Regular.woff2') format('woff2');
    font-weight: 300;
    font-style: normal;
}

#bm {
    display: fixed;
    width: auto;
    height: auto;
    padding-left: 50px;
    padding-right: 50px;
    padding-top: 80px;
}

p {
    text-align: center;
    color: var(--fontcolor);
    font-family: Inter;
    margin: 0;
    padding: 10px 25px;
}

#directions {
    padding-top: 30px;
    font-size: 20px;
    max-width: 250px;
    margin: 0 auto;
}

.answerFlexbox {
    display: flex;
    flex-direction: column;
    align-items: center;
    opacity: 0;
    gap: 20px;
    transition: opacity 0.5s ease-in-out;
    pointer-events: none;
}

#answerFlexbox {
    margin-top: 20px;
}


.buttonAnswer {
    background-color: var(--buttons);
    color: var(--fontcolor);
    font-size: 20px;
    width: auto;
    max-width: 280px;
    border-radius: 5px;
    margin: 0;
    display: inline-block;
    line-height: 1.5; /* Set a specific line-height value */
    transition: opacity 0.5s ease-in-out;
}

#replay {
    position: fixed;
    bottom: 70px;
    left: calc(50% - 24px);
}

.hidden {
    display: none;
}

.fade-in {
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
    pointer-events: auto; /* Enable pointer events when answers appear */
}

.fade-out {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;
}

/* Add this CSS to style the start button */
#startButton {
    display: flex;
    justify-content: center;
    align-items: center; /* Vertically center the button */
    margin: 0 auto; /* Center the button horizontally */
    margin-top: 0px;
}

#start {
    background-color: var(--fontcolor);
    color: var(--buttons);
    font-size: 20px;
    line-height: 130%;
    padding:10px 25px;
    border-radius: 5px;
    max-width: 250px;
    cursor: pointer;
    transition: background-color 0.3s ease, opacity 0.5s ease; /* Add transition for opacity */
}


.start-fade-out {
    opacity: 0;
    pointer-events: none; /* Disable pointer events for the faded-out button */
}



/* Progress bar styles */
#progressContainer {
    width: calc(100% - 150px);
    background-color: var(--buttons);
    margin: 10px auto;
}

#progressBar {
    width: 0;
    height: 8px;
    background-color: #ffffff;
    transition: width 0.5s ease-in-out;
}

#transitionBox {
    position: fixed;
    z-index: 10;
    width: 100%;
    height: 100%;
    background-color: #ffffff;
    margin: 0;
    opacity: 0;
    visibility: hidden;
    pointer-events: none; /* Make the #transitionBox ignore pointer events */
}

.fade-in-transitionBox {
    visibility: visible !important;
    opacity: 1 !important;
    transition: opacity 0.2s ease-in-out;
}


#note {
    position: fixed;
    width: 200px;
    margin: auto auto;
    font-size: 15px;
    bottom: 30px;
    transform: translate(-50%);
    left: 50vw;
}


#transitionBoxStart {
    position: fixed;
    z-index: 10;
    width: 100%;
    height: 100%;
    background-color: #ffffff;
    margin: 0;
    pointer-events: none; /* Make the #transitionBox ignore pointer events */
}

.animate-in {
    animation: fade-in 0.2s linear 0.5s 1 forwards;
}


@keyframes fade-in {
    from {opacity: 1;}
    to {opacity: 0;}
}